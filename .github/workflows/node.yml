name: Node CI
on:
  push:
    branches:
      - master
      - develop
      - EAV-*
    tags:
      - "**"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
env:
  AWS_REGION: eu-north-1

jobs:
  run-yarn-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install
        run: |
          corepack enable

          yarn workspaces focus --all --production
          yarn install --immutable

      - name: yarn validate:dependencies
        run: yarn validate:dependencies
        continue-on-error: true

      - name: yarn build
        run: yarn build

      - uses: actions/upload-artifact@v4
        with:
          name: dist artifacts
          path: |
            dist
            node_modules

  dockerhub-release-branch:
    runs-on: ubuntu-latest
    needs: [run-yarn-build]
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v4
        with:
          name: dist artifacts
          path: .
      - name: Determine if images should be published to ecr
        id: ecrrepo
        run: |
          # check if a release branch, or master, or a tag
          if [[ "${{ github.ref }}" == "refs/heads/develop" || "${{ github.ref }}" == "refs/heads/master" || "${{ github.ref }}" == refs/tags/* || "${{ github.ref }}" == refs/heads/EAV-* ]]
          then
              ECRREPO_PUBLISH="1"
          else
              ECRREPO_PUBLISH="0"
          fi
          # debug output
          echo "ecrrepo-publish $ECRREPO_PUBLISH"
          echo "ecrrepo-publish=$ECRREPO_PUBLISH" >> $GITHUB_OUTPUT
      - name: Configure AWS Credentials
        if: steps.ecrrepo.outputs.ecrrepo-publish == '1'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        if: steps.ecrrepo.outputs.ecrrepo-publish == '1'      
        id: login-aws-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker meta
        id: meta
        if: steps.ecrrepo.outputs.ecrrepo-publish == '1'
        uses: docker/metadata-action@v3
        with:
          images: ${{ steps.login-aws-ecr.outputs.registry }}/${{ github.event.repository.name }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            
      - name: Build and push docker image tags
        if: steps.ecrrepo.outputs.ecrrepo-publish == '1'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  dockerhub-release-custom-tag:
    runs-on: ubuntu-latest
    needs: [run-yarn-build]
    if: |
      startsWith(github.ref, 'refs/tags/') && !startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - uses: actions/download-artifact@v4
        with:
          name: dist artifacts
          path: .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-aws-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ steps.login-aws-ecr.outputs.registry }}/${{ github.event.repository.name }}
          tags: |
            type=ref,event=tag  
      - name: Build and push docker image tags
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}